untyped

global function SpawnRepairDrone

const int REPAIR_DRONE_MAX_HEALTH = 250
const float REPAIR_DRONE_HEAL_AMOUNT = 0.03
const float REPAIR_DRONE_HEAL_AMOUNT_TITAN = 0.002

entity function SpawnRepairDrone( int team, vector origin, vector angles, entity owner = null, int health = REPAIR_DRONE_MAX_HEALTH, float healPercent = REPAIR_DRONE_HEAL_AMOUNT, float titanHealPercent = REPAIR_DRONE_HEAL_AMOUNT_TITAN )
{
	entity repairDrone = CreateGenericDrone( team, origin, angles )
	SetSpawnOption_AISettings( repairDrone, "npc_drone" )

	//these enable global damage callbacks for the repairDrone
	repairDrone.s.isHidden <- false
	repairDrone.s.fx <- null

	DispatchSpawn( repairDrone )
	SetTeam( repairDrone, team )
	repairDrone.SetTitle( "維修無人機" )
	repairDrone.SetMaxHealth( health )
	repairDrone.SetHealth( repairDrone.GetMaxHealth() )
	//repairDrone.TakeWeapon( repairDrone.GetActiveWeapon().GetWeaponClassName() )
	repairDrone.SetTakeDamageType( DAMAGE_YES )
	repairDrone.SetDamageNotifications( true )
	repairDrone.SetDeathNotifications( true )
	repairDrone.Solid()
	repairDrone.Show()
	repairDrone.EnableNPCFlag( NPC_IGNORE_ALL )

	if( owner != null )
	{
		repairDrone.SetBossPlayer( owner )
		repairDrone.SetOwner( owner )
		NPCFollowsPlayer( repairDrone, owner )
		Highlight_SetOwnedHighlight( repairDrone, "friendly_ai" )
	}
	
	//EmitSoundOnEntity( repairDrone, "Drone_Mvmt_Hover" )

	repairDrone.Minimap_SetAlignUpright( true )
	repairDrone.Minimap_AlwaysShow( TEAM_IMC, null )
	repairDrone.Minimap_AlwaysShow( TEAM_MILITIA, null )
	repairDrone.Minimap_SetObjectScale( MINIMAP_CLOAKED_DRONE_SCALE )
	repairDrone.Minimap_SetZOrder( MINIMAP_Z_NPC )

	ShowName( repairDrone )

	thread RepairDroneThink( repairDrone, healPercent, titanHealPercent )

	return repairDrone
}