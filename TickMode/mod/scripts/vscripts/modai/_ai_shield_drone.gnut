untyped

global function ShieldDrone_Init
global function SpawnShieldDrone

const asset SHIELD_DRONE_MODEL_MLT = $"models/vehicle/crow_dropship/crow_dropship.mdl"
const asset SHIELD_DRONE_MODEL_IMC = $"models/vehicle/goblin_dropship/goblin_dropship.mdl"

void function ShieldDrone_Init()
{
	ShieldDronePrecache()
}

void function ShieldDronePrecache()
{
	PrecacheModel( $"models/vehicle/crow_dropship/crow_dropship.mdl" )
	PrecacheModel( $"models/vehicle/goblin_dropship/goblin_dropship.mdl" )
}

entity function SpawnShieldDrone( int team, vector origin, vector angles, entity owner = null )
{
	entity shieldedDrone = CreateGenericDrone( team, origin, angles )
	SetSpawnOption_AISettings( shieldedDrone, "npc_drone_shield" )
	if( team == TEAM_MILITIA )
		shieldedDrone.SetModel( SHIELD_DRONE_MODEL_MLT )
	if( team == TEAM_IMC )
		shieldedDrone.SetModel( SHIELD_DRONE_MODEL_IMC )

	//these enable global damage callbacks for the shieldedDrone
	shieldedDrone.s.isHidden <- false
	shieldedDrone.s.fx <- null

	DispatchSpawn( shieldedDrone )
	// don't reset it's model!
	//if( team == TEAM_MILITIA )
	//	shieldedDrone.SetModel( SHIELD_DRONE_MODEL_MLT )
	//if( team == TEAM_IMC )
	//	shieldedDrone.SetModel( SHIELD_DRONE_MODEL_IMC )
		
	SetTeam( shieldedDrone, team )
	shieldedDrone.SetMaxHealth( 50 )
	shieldedDrone.SetHealth( 50 )
	shieldedDrone.SetTakeDamageType( DAMAGE_YES )
	shieldedDrone.SetDamageNotifications( true )
	shieldedDrone.SetDeathNotifications( true )
	shieldedDrone.NotSolid() // shouldn't have collision
	shieldedDrone.Show()
	shieldedDrone.kv.modelscale = 0.05
	shieldedDrone.EnableNPCFlag( NPC_IGNORE_ALL )
	if( owner != null )
	{
		shieldedDrone.SetBossPlayer( owner )
		shieldedDrone.SetOwner( owner )
		NPCFollowsPlayer( shieldedDrone, owner )
		Highlight_SetOwnedHighlight( shieldedDrone, "friendly_ai" )
	}

	EmitSoundOnEntity( shieldedDrone, "Drone_Mvmt_Hover" )

	shieldedDrone.Minimap_SetAlignUpright( true )
	shieldedDrone.Minimap_AlwaysShow( TEAM_IMC, null )
	shieldedDrone.Minimap_AlwaysShow( TEAM_MILITIA, null )
	shieldedDrone.Minimap_SetObjectScale( MINIMAP_CLOAKED_DRONE_SCALE )
	shieldedDrone.Minimap_SetZOrder( MINIMAP_Z_NPC )

	ShowName( shieldedDrone )

	return shieldedDrone
}