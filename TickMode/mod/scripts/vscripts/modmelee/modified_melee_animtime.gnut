global function Modified_Melee_AnimTime_Init

global function ModifiedMelee_ReDeployAfterTime

void function Modified_Melee_AnimTime_Init()
{

}

// sometimes we may modify the melee to make them have less "melee_attack_animtime", but they won't be able to use again unless we re-deploy them!
void function ModifiedMelee_ReDeployAfterTime( entity weapon )
{
    thread ModifiedMelee_ReDeployAfterTime_Threaded( weapon )
}

void function ModifiedMelee_ReDeployAfterTime_Threaded( entity weapon )
{
    entity owner = weapon.GetWeaponOwner()
    owner.EndSignal( "OnDestroy" )
    // no support for melee hybrids... weapon.GetWeaponInfoFileKeyField( "fire_mode" ) can't get weapon's mod effect!
    //int offhandType = weapon.GetWeaponSettingEnum( eWeaponVar.fire_mode )
    //print( offhandType )
    float attackAnimTime = weapon.GetWeaponSettingFloat( eWeaponVar.melee_attack_animtime )
    //print( "attackAnimTime: " + string( attackAnimTime ) )
    string meleeName = weapon.GetWeaponClassName()
    array<string> meleeMods = weapon.GetMods()

    wait attackAnimTime

    if ( !IsValid( weapon ) )
        return
    owner.TakeOffhandWeapon( OFFHAND_MELEE )
    owner.GiveOffhandWeapon( meleeName, OFFHAND_MELEE, meleeMods )
}