global function Fake_Scope_Sniper_Rifles_Init

global function FakeScopeSniper_FindModsForWeapon
global function FakeScopeSniper_ReplacePlayerLoadout

const array<string> FAKE_SCOPE_WEAPONS = 
[
    "mp_weapon_sniper", 
    "mp_weapon_dmr"
]

const array<string> FAKE_SCOPE_MODS = 
[
    "iron_sights",
    "fake_stabilizer",
    "fake_threat_scope"
]

const array<string> DISABLED_MODS = 
[
    "hcog",
    "redline_sight",
    "holosight",
    "aog",
    "threat_scope",
    "scope_4x",
    "stabilizer",
    "no_ironsight_weapon",
    "fake_stabilizer",
    "fake_threat_scope"
]

void function Fake_Scope_Sniper_Rifles_Init()
{

}

array<string> function FakeScopeSniper_FindModsForWeapon( entity weapon )
{
    if ( !IsValid( weapon ) )
        return []
    if( !IsWeaponAbleToUseFakeScope( weapon ) )
        return []

    string weaponName = weapon.GetWeaponClassName()
    //print( weaponName )
    array<string> mods = weapon.GetMods()
    string modToAppend = FAKE_SCOPE_MODS[ RandomInt( FAKE_SCOPE_MODS.len() ) ]
    mods.append( modToAppend )
    return mods
}

void function FakeScopeSniper_ReplacePlayerLoadout( entity player )
{
    array<entity> weapons = player.GetMainWeapons()
    foreach( int index, entity weapon in weapons )
    {
        //print( "checking weapon!" )
        if( IsWeaponAbleToUseFakeScope( weapon ) )
        {
            string classname = weapon.GetWeaponClassName()
            //print( classname )
            array<string> mods = FakeScopeSniper_FindModsForWeapon( weapon )
            int skin = weapon.GetSkin()
            int camo = weapon.GetCamo()
            weapon.Destroy() // take out exact weapon
            entity curWeapon = player.GiveWeapon( classname, mods )
            if( IsValid( curWeapon ) )
            {
                curWeapon.SetSkin( skin )
                curWeapon.SetCamo( camo )
            }
        }
    }
}

bool function IsWeaponAbleToUseFakeScope( entity weapon )
{
    if( !IsValid( weapon ) )
        return false

    string classname = weapon.GetWeaponClassName()
    if( FAKE_SCOPE_WEAPONS.contains( classname ) )
    {
        array<string> mods = weapon.GetMods()
        foreach( string mod in mods )
        {
            if( DISABLED_MODS.contains( mod ) )
            {
                //print( "returning false because mod in blacklist" )
                return false
            }
        }
        return true
    }

    return false
}