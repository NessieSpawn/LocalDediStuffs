global function AntiCheat_Input_Printer_Init

global function PlayerInputPrinter

void function AntiCheat_Input_Printer_Init()
{
	RegisterSignal( "StartInputPrinter" )
	RegisterSignal( "StopInputPrinter" )
}

void function PlayerInputPrinter( entity target, entity receivePlayer, bool useChat = false )
{
	receivePlayer.Signal( "StartInputPrinter" )
	receivePlayer.EndSignal( "OnDestroy" )
	receivePlayer.EndSignal( "StartInputPrinter" )
	receivePlayer.EndSignal( "StopInputPrinter" )
	target.Signal( "StartInputPrinter" )
	target.EndSignal( "OnDestroy" )
	target.EndSignal( "StartInputPrinter" )
	target.EndSignal( "StopInputPrinter" )

	while( true )
	{
		if( useChat )
			PrintPlayerMoveAnglesFromInputByChatHook( target, receivePlayer )
		else
			PrintPlayerMoveAnglesFromInputByHudMessage( target, receivePlayer )
		WaitFrame()
	}
}
/*
script foreach( entity player in GetPlayerArray() )
{
	thread PlayerInputPrinter( player, player )
}
*/
//script thread PlayerInputPrinter( GetPlayerArray()[3], GetPlayerArray()[5] )
//script thread PlayerInputPrinter( GetPlayerArray()[1], GetPlayerArray()[1] )
//script thread PlayerInputPrinter( GetPlayerArray()[15], GetPlayerArray()[1] )
//script thread PlayerInputPrinter( GetPlayerArray()[3], GetPlayerArray()[3] )
void function PrintPlayerMoveAnglesFromInputByHudMessage( entity target, entity receivePlayer )
{
	bool hasValidInput = true
	bool usingKeyboard = false
	string logString = "该tick没有有效输入"
	if( target.IsInputCommandHeld( IN_FORWARD ) && target.IsInputCommandHeld( IN_MOVERIGHT ) )
		logString = "推测输入方式: 键盘, 输入方向: 右前 ↗"
	else if( target.IsInputCommandHeld( IN_FORWARD ) && target.IsInputCommandHeld( IN_MOVELEFT ) )
		logString = "推测输入方式: 键盘, 输入方向: 左前 ↖"
	else if( target.IsInputCommandHeld( IN_BACK ) && target.IsInputCommandHeld( IN_MOVERIGHT ) )
		logString = "推测输入方式: 键盘, 输入方向: 右后 ↘"
	else if( target.IsInputCommandHeld( IN_BACK ) && target.IsInputCommandHeld( IN_MOVELEFT ) )
		logString = "推测输入方式: 键盘, 输入方向: 左后 ↙"
	else if( target.IsInputCommandHeld( IN_FORWARD ) )
		logString = "推测输入方式: 键盘, 输入方向: 向前 ↑"
	else if( target.IsInputCommandHeld( IN_BACK ) )
		logString = "推测输入方式: 键盘, 输入方向: 向后 ↓"
	else if( target.IsInputCommandHeld( IN_MOVERIGHT ) )
		logString = "推测输入方式: 键盘, 输入方向: 向右 →"
	else if( target.IsInputCommandHeld( IN_MOVELEFT ) )
		logString = "推测输入方式: 键盘, 输入方向: 向左 ←"

	// using keyboard?
	if( target.IsInputCommandHeld( IN_FORWARD ) || target.IsInputCommandHeld( IN_BACK ) || target.IsInputCommandHeld( IN_MOVERIGHT ) || target.IsInputCommandHeld( IN_MOVELEFT ) )
		usingKeyboard = true
	
	vector angles = target.EyeAngles()
	float xAxis = target.GetInputAxisRight()
	float yAxis = target.GetInputAxisForward()
	vector directionForward = GetDirectionFromInput( angles, xAxis, yAxis )
	vector directionAngles = VectorToAngles( directionForward )

	if( directionAngles.y != 180 && !usingKeyboard )
	{
		float outputAngle = directionAngles.y - angles.y - 180
		logString = "推测输入方式: 手柄, 输入角度: " + string( outputAngle )
	}

	SendHudMessage( receivePlayer, logString, -1, -0.2, 255, 255, 100, 255, 0, 1, 0 )
	//print( directionAngles )
}

void function PrintPlayerMoveAnglesFromInputByChatHook( entity target, entity receivePlayer )
{
	bool hasValidInput = true
	bool usingKeyboard = false
	string logString = "该tick没有有效输入"
	if( target.IsInputCommandHeld( IN_FORWARD ) && target.IsInputCommandHeld( IN_MOVERIGHT ) )
		logString = "推测输入方式: 键盘, 输入方向: 右前 ↗"
	else if( target.IsInputCommandHeld( IN_FORWARD ) && target.IsInputCommandHeld( IN_MOVELEFT ) )
		logString = "推测输入方式: 键盘, 输入方向: 左前 ↖"
	else if( target.IsInputCommandHeld( IN_BACK ) && target.IsInputCommandHeld( IN_MOVERIGHT ) )
		logString = "推测输入方式: 键盘, 输入方向: 右后 ↘"
	else if( target.IsInputCommandHeld( IN_BACK ) && target.IsInputCommandHeld( IN_MOVELEFT ) )
		logString = "推测输入方式: 键盘, 输入方向: 左后 ↙"
	else if( target.IsInputCommandHeld( IN_FORWARD ) )
		logString = "推测输入方式: 键盘, 输入方向: 向前 ↑"
	else if( target.IsInputCommandHeld( IN_BACK ) )
		logString = "推测输入方式: 键盘, 输入方向: 向后 ↓"
	else if( target.IsInputCommandHeld( IN_MOVERIGHT ) )
		logString = "推测输入方式: 键盘, 输入方向: 向右 →"
	else if( target.IsInputCommandHeld( IN_MOVELEFT ) )
		logString = "推测输入方式: 键盘, 输入方向: 向左 ←"

	// using keyboard?
	if( target.IsInputCommandHeld( IN_FORWARD ) || target.IsInputCommandHeld( IN_BACK ) || target.IsInputCommandHeld( IN_MOVERIGHT ) || target.IsInputCommandHeld( IN_MOVELEFT ) )
		usingKeyboard = true
	
	vector angles = target.EyeAngles()
	float xAxis = target.GetInputAxisRight()
	float yAxis = target.GetInputAxisForward()
	vector directionForward = GetDirectionFromInput( angles, xAxis, yAxis )
	vector directionAngles = VectorToAngles( directionForward )

	if( directionAngles.y != 180 && !usingKeyboard )
	{
		float outputAngle = directionAngles.y - angles.y - 180
		logString = "推测输入方式: 手柄, 输入角度: " + string( outputAngle )
	}

	Chat_ServerPrivateMessage( receivePlayer, logString, false, false )
	//print( directionAngles )
}

vector function GetDirectionFromInput( vector playerAngles, float xAxis, float yAxis )
{
	playerAngles.x = 0
	playerAngles.z = 0
	vector forward = AnglesToForward( playerAngles )
	vector right = AnglesToRight( playerAngles )

	vector directionVec = Vector(0,0,0)
	directionVec += right * xAxis
	directionVec += forward * yAxis

	vector directionAngles = VectorToAngles( directionVec )
	vector directionForward = AnglesToForward( directionAngles )

	return directionForward
}