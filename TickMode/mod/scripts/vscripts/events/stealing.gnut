global function WeaponStealing_Init
void function WeaponStealing_Init() {
	#if SERVER
		AddCallback_OnPlayerKilled(StealWeapons);
	#endif
}
//bools
	bool function StealAbilitiesEnabled() {
		return true
	}

	bool function StealWeaponsEnabled() {
		return true
	}
	bool function UnrestrictedStealingEnabled() {
		return true
	}
#if SERVER
//functions
void function SwapWeapons(entity victim, entity attacker){
	foreach(entity weapon in attacker.GetMainWeapons()){
		attacker.TakeWeaponNow(weapon.GetWeaponClassName())}
	foreach(entity weapon in victim.GetMainWeapons()){
		attacker.GiveWeapon(weapon.GetWeaponClassName(), weapon.GetMods())
		}
}
void function SwapAbilities(entity victim, entity attacker){
	for ( int i = 0; i <= OFFHAND_MELEE; i++ ) // OFFHAND_MELEE is the largest
	{
		if ( IsValid( attacker.GetOffhandWeapon( i ) ))
		  attacker.TakeWeaponNow( attacker.GetOffhandWeapon(i).GetWeaponClassName() )
	}
	for ( int i = 0; i <= OFFHAND_MELEE; i++ ) // OFFHAND_MELEE is the largest
	{
	  if ( i != OFFHAND_INVENTORY || i != OFFHAND_EQUIPMENT )
	  {
	    if ( IsValid( victim.GetOffhandWeapon( i ) ))
		  attacker.GiveOffhandWeapon( victim.GetOffhandWeapon( i ).GetWeaponClassName(), i, victim.GetOffhandWeapon( i ).GetMods())
	  }
	}
}
bool function ValidSteal(entity victim, entity attacker){
	if ( !victim.IsPlayer() || !attacker.IsPlayer() || GetGameState() != eGameState.Playing || !IsAlive(attacker))
		return false
	if(attacker.IsTitan() == victim.IsTitan())
		return true
	if(UnrestrictedStealingEnabled() && !(attacker.IsTitan))
		return true
	return false
}
//Core
void function StealWeapons(entity victim, entity attacker, var damageinfo){
	if(StealAbilitiesEnabled() && ValidSteal(victim, attacker) && (victim.IsTitan() == attacker.IsTitan())) //some titan abilities cause crashes sadge
	{
		SwapAbilities(victim, attacker)
		attacker.SetSuitGrapplePower( 100.0 )
	}
	if(StealWeaponsEnabled() && ValidSteal(victim, attacker))
		SwapWeapons(victim, attacker)
}
#endif